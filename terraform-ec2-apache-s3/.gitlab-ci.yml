stages:
  - init
  - validate
  - plan
  - apply
  - destroy

image:
  name: hashicorp/terraform:latest
  entrypoint: [""]

before_script:
  - apk add --no-cache aws-cli curl unzip bash
  - aws --version
  - terraform --version

init:
  stage: init
  script:
    - terraform init
  artifacts:
    paths:
      - .terraform/
      - .terraform.lock.hcl
      - terraform.tfstate  # Ensure terraform state is saved

validate:
  stage: validate
  dependencies:
    - init
  script:
    - terraform validate

plan:
  stage: plan
  dependencies:
    - init
  script:
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - tfplan
      - terraform.tfstate   # Ensure the state file is passed along
      - .terraform/
      - .terraform.lock.hcl
  only:
    - main

apply:
  stage: apply
  dependencies:
    - plan
  script:
    - terraform apply -auto-approve tfplan
  artifacts:
    paths:
      - terraform.tfstate   # Ensure the latest state file is passed along
  allow_failure: true  # ✅ Apply failure won’t block destroy
  only:
    - main

destroy:
  stage: destroy
  script:
    - terraform init
    - terraform destroy -auto-approve
  artifacts:
    paths:
      - terraform.tfstate   # Save the state after destruction (if any)
  when: manual  # Optional: If you want this step to be manually triggered, keep this.
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
      allow_failure: true
